{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\balra\\\\Documents\\\\George Mason\\\\Eighth Semester\\\\SWE 432\\\\assignment8\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stringInput = \"\";\nvar strList = [];\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [replacement, setReplacement] = useState('');\n  const [noReplacement, setNoReplacement] = useState('');\n\n  const withReplace = () => {\n    const strList = name.split(\" \");\n    var randStr = strList[Math.floor(Math.random() * strList.length)];\n    setReplacement(randStr);\n  };\n\n  const withoutReplace = () => {\n    var strList = name.split(\" \");\n    var randStr = strList[Math.floor(Math.random() * strList.length)];\n    setNoReplacement(randStr);\n    const newList = [].concat(strList);\n    newList.splice(strList.indexOf(randStr), 1);\n    strList = newList;\n    setName(strList.join(\" \"));\n  };\n\n  const clear = () => {\n    setName('');\n    setReplacement('');\n    setNoReplacement('');\n  };\n\n  const handleNameInput = e => {\n    setName(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" The World's Most Advanced Text Processor in React \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"I know you came to this website again because you were too lazy to sort words by yourself. Now give me your list of strings in the box below!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"inputLabel\",\n        for: \"stringInput\",\n        children: \"Your Input:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"stringInput\",\n        onChange: handleNameInput,\n        value: name,\n        name: \"Your Input\",\n        size: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"operation\",\n        value: \"With Replacement\",\n        onClick: withReplace,\n        children: \"With Replacement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"operation\",\n        value: \"Without Replacement\",\n        onClick: withoutReplace,\n        children: \"Without Replacement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"operation\",\n        value: \"Clear Text Fields\",\n        onClick: clear,\n        children: \"Clear Text Fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"With Replacement: \", replacement, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Without Replacement: \", noReplacement, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Collaboration summary: Minhyuk worked on implementing the basic algorithms for this website, such as returning a string with or without replacement. Harshil worked on setting up the project environment & structure, and also deploying to Heroku. Sid came up with the design of the website. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"x6TknhrQiz9WOlqztGlt72lN+Yc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/balra/Documents/George Mason/Eighth Semester/SWE 432/assignment8/src/App.js"],"names":["React","useState","stringInput","strList","App","name","setName","replacement","setReplacement","noReplacement","setNoReplacement","withReplace","split","randStr","Math","floor","random","length","withoutReplace","newList","concat","splice","indexOf","join","clear","handleNameInput","e","target","value","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\n\nvar stringInput = \"\";\nvar strList = [];\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [replacement, setReplacement] = useState('');\n  const [noReplacement, setNoReplacement] = useState('');\n\n  const withReplace = () => {\n    const strList = name.split(\" \");\n    var randStr = strList[Math.floor(Math.random() * strList.length)];\n    setReplacement(randStr);\n  };\n\n  const withoutReplace = () => {\n    var strList = name.split(\" \");\n    var randStr = strList[Math.floor(Math.random() * strList.length)];\n    setNoReplacement(randStr);\n\n    const newList = [].concat(strList);\n    newList.splice(strList.indexOf(randStr), 1);\n    strList = newList;\n\n    setName(strList.join(\" \"));\n  };\n\n  const clear = () => {\n    setName('');\n    setReplacement('');\n    setNoReplacement('');\n  };\n\n  const handleNameInput = (e) => {\n    setName(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1> The World's Most Advanced Text Processor in React </h1>\n        <p>\n          I know you came to this website again because you were too lazy to sort words by yourself. Now give me your list of strings in the box below!\n        </p>\n\n        <label id=\"inputLabel\" for=\"stringInput\">Your Input:</label>\n        <input type=\"text\" id=\"stringInput\" onChange={handleNameInput} value={name} name=\"Your Input\" size=\"100\"></input>\n\n\n        <button type=\"submit\" name=\"operation\" value=\"With Replacement\" onClick = {withReplace}>With Replacement</button>\n        <button type=\"submit\" name=\"operation\" value=\"Without Replacement\" onClick = {withoutReplace}>Without Replacement</button>\n        <button type=\"submit\" name=\"operation\" value=\"Clear Text Fields\" onClick = {clear}>Clear Text Fields</button>\n\n        <div className=\"output\">\n          <p>With Replacement: {replacement} </p>\n        </div>\n        <div className=\"output\">\n          <p>Without Replacement: {noReplacement} </p>\n        </div>\n\n        <p> Collaboration summary: Minhyuk worked on implementing the basic algorithms for this website, such as returning a string with or without replacement. Harshil worked on setting up the project environment & structure, and also deploying to Heroku. Sid came up with the design of the website. </p>\n\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}